directory <- list.files(WD)
x = substitute(suffix)
grep("x$",directory)
}
ext.size(R)
ext.size('R')
suffix$ = suffix
ext.size <-function(suffix)
{
WD <- getwd()
directory <- list.files(WD)
grep("suffix$",directory, value=TRUE)
}
ext.size(R)
ext.size('R')
ext.size <-function(suffix)
{
WD <- getwd()
directory <- list.files(WD)
x = substitute(suffix)
y = grep("suffix$",directory, value=TRUE)
}
ext.size(R)
y
ext.size <-function(suffix)
{
WD <- getwd()
directory <- list.files(WD)
x = substitute(suffix)
y <<- grep("suffix$",directory, value=TRUE)
}
ext.size(R)
y
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
#Counter
iter <- 1
for(i in 1:length(prime))
{
if(prime[prime%%prime[iter]]!=0)
{
iter<-iter+1
}
}
#while (prime[iter] <= sqrt(n))
#{#Start while
#prime <-  prime[prime %% prime[iter] != 0 | prime==prime[iter]]
#iter <- iter+1
#}#Finish while
#Output vector titled "prime".
prime<<-prime
}#End Function
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
n = numeric(prime)
for(i in 1:length(prime))
{
if(prime[i]%%2 != 0)
{
n = prime[i]
}
}
}
prime.list(10)
prime <- 2:n
prime <- 2:10
length(prime)
prime%%2
prime%%2!=0
prime
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
n = numeric(prime)
for(i in 1:length(prime))
{
if(prime[i]%%2 != 0)
{
n = prime[i]
}
}
}
prime.list(10)
prime
length(prime)
1:length(prime)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
n = numeric(prime)
for(i in 1:length(prime+1))
{
if(prime[i]%%2 != 0)
{
n = prime[i]
}
}
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
n = numeric(prime)
m = length(prime)
for(i in 1:m+1)
{
if(prime[i]%%2 != 0)
{
n = prime[i]
}
}
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
n = numeric(prime)
m = length(prime)
for(i in 1:(m+1))
{
if(prime[i]%%2 != 0)
{
n = prime[i]
}
}
}
prime.list(10)
prime
numeric(prime)
numeric(prime)
prime
z = numeric(prime)
prime<-1:10
numeric(prime)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
m = length(prime)
n = numeric(m)
for(i in 1:(m+1))
{
if(prime[i]%%2 != 0)
{
n = prime[i]
}
}
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
m = length(prime)
n = numeric(m)
for(i in 2:(m))
{
if(prime[i]%%2 != 0)
{
n = prime[i]
}
}
}
prime.list(10)
n
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
m = length(prime)
n = numeric(m)
for(i in 2:(m))
{
if(prime[i]%%2 != 0)
{
n = prime[i]
}
}
return(n)
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- 2:n
m = length(prime)
n = numeric(m)
for(i in 1:(m))
{
if(prime[i]%%2 != 0)
{
n = prime[i]
}
}
return(n)
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- c(2,seq(from=3,n-1,by=2),n)
m = length(prime)
n = numeric(m)
for(i in 1:m)
{
if((sum(prime[i]%%1:prime[i])==0)==2)
{
n = prime[i]
}
}
return(n)
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- c(2,seq(from=3,n-1,by=2),n)
m = length(prime)
n = numeric(m)
for(i in 1:m)
{
if((sum(prime[i]%%1:prime[i])==0)==2)
{
n[i] = prime[i]
}
}
return(n)
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- c(2,seq(from=3,n-1,by=2),n)
m = length(prime)
n = numeric(m)
for(i in 1:m)
{
if((sum((prime[i]%%1:prime[i])==0)==2)
{
n[i] = prime[i]
}
}
return(n)
}
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- c(2,seq(from=3,n-1,by=2),n)
m = length(prime)
n = numeric(m)
for(i in 1:m)
{
if(sum((prime[i]%%1:prime[i])==0)==2)
{
n[i] = prime[i]
}
}
return(n)
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- c(2,seq(from=3,n-1,by=2),n)
m = length(prime)
n = numeric(m)
for(i in 1:m)
{
if(sum((prime[i]%%1:prime[i])==0)==2)
{
n[i] = prime[i]
}
}
return(n[n!=0])
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- c(seq(from=3,n-1,by=2),n)
prime <- c(2,prime)
m = length(prime)
n = numeric(m)
for(i in 1:m)
{
if(sum((prime[i]%%1:prime[i])==0)==2)
{
n[i] = prime[i]
}
}
return(n[n!=0])
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime.
prime <- c(seq(from=3,n-1,by=2),n)
prime <- c(2,prime)
m = length(prime)
n = numeric(m)
for(i in 1:m)
{
if(sum((prime[i]%%1:prime[i])==0)==2)
{
n[i] = prime[i]
}
}
return(n[n!=0])
}
prime.list(10)
2%%1
prime<-2:10
sum((prime[2]%%1:prime[2])==0)==2
sum((prime[9]%%1:prime[9])==0)==2
1:prime[4]
prime[4]%%1:prime[4]
prime[5]%%1:prime[5]
prime <- c(seq(from=3,n-1,by=2),n)
prime <- c(2,prime)
n=10
prime <- c(seq(from=3,n-1,by=2),n)
prime <- c(2,prime)
prime
prime <- c(seq(from=3,n-1,by=2),n-1)
prime <- c(2,prime)
prime
prime <- c(seq(from=3,n-1,by=2),n)
prime <- c(2,prime)
prime[1]%%1:prime
prime[1]%%1:prime[10]
prime[1]%%1:prime[9]
prime[1]%%1:prime[8]
prime
sum((prime[1]%%1:prime[1])==0)==2)
sum((prime[1]%%1:prime[1])==0)==2
prime[1]%%1:prime[1]
prime[2]%%1:prime[2]
prime[3]%%1:prime[3]
prime[4]%%1:prime[4]
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime. Capturing all odd numbers and 2.
prime <- c(seq(from=3,n-1,by=2),n)
prime <- c(2,prime)
#Get length of prime and make numeric vector for allocation in for loop
m = length(prime)
n = numeric(m)
#This will check for prime. Note, prime is a number only divisible by itself and 1. So,
#taking the sum of all mods=0 and checking if that sum equals 2 will return prime #'s. If
#the number is divisible by anything else, then it is not prime and the sum of 0's > 2.
for(i in 1:m)
{
if(sum((prime[i]%%1:prime[i])==0)==2)
{
n[i] = prime[i]
}
}
return(n[n!=0])
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime. Capturing all odd numbers and 2.
prime <- c(seq(from=3,n-1,by=2),n)
prime <- c(2,prime)
#Get length of prime and make numeric vector for allocation in for loop
m = length(prime)
n = numeric(m)
#This will check for prime. Note, prime is a number only divisible by itself and 1. So,
#taking the sum of all mods=0 and checking if that sum equals 2 will return prime #'s. If
#the number is divisible by anything else, then it is not prime and the sum of 0's > 2.
for(i in 1:m)
{
total = sum((prime[i]%%1:prime[i])==0)
if(total==2)
{
n[i] = prime[i]
}
}
return(n[n!=0])
}
prime.list(10)
prime.list <- function(n)
{#Begin Function
#Initial checks of input.
if(!is.numeric(n)) {stop("Parameter must be a numeric")}
if(n<0){stop("The input must be positive.") }
if(n<=1){stop("The input must be greater than one.") }
if(n>10000){stop("The input cannot be greater than 10,000") }
#We will first make a sequence of 2:n since 1 is not prime. Capturing all odd numbers and 2.
prime <- c(seq(from=3,n-1,by=2),n)
prime <- c(2,prime)
#Get length of prime and make numeric vector for allocation in for loop
m = length(prime)
n = numeric(m)
#This will check for prime. Note, prime is a number only divisible by itself and 1. So,
#taking the sum of all mods=0 and checking if that sum equals 2 will return prime #'s. If
#the number is divisible by anything else, then it is not prime and the sum of 0's > 2.
for(i in 1:m)
{
total = sum((prime[i]%%1:prime[i])==0)
if(total==2)
{
n[i] = prime[i]
}
}
return(n[n!=0])
}
prime.list(10)
